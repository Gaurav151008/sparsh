{"ast":null,"code":"import axios from \"axios\";\nconst apiURL = \"http://localhost:8000\";\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getGroupedProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/grouped-by-category`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPorductImage = async ({\n  pImage\n}) => {\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-image`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pColors,\n  pSizes,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer\n}) => {\n  let formData = new FormData();\n\n  // Append images\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n\n  // Append other fields\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n\n  // Append pColors and pSizes as JSON strings\n  formData.append(\"pColors\", JSON.stringify(pColors));\n  formData.append(\"pSizes\", JSON.stringify(pSizes));\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProduct = async product => {\n  let formData = new FormData();\n\n  // Append new images, if any\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n\n  // Append other fields\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n\n  // Append existing images and arrays as JSON strings\n  formData.append(\"pImages\", JSON.stringify(product.pImages));\n  formData.append(\"pColors\", JSON.stringify(product.pColors));\n  formData.append(\"pSizes\", JSON.stringify(product.pSizes));\n  try {\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","apiURL","getAllProduct","res","get","data","error","console","log","getGroupedProduct","createPorductImage","pImage","formData","FormData","file","append","post","createProduct","pName","pDescription","pColors","pSizes","pStatus","pCategory","pQuantity","pPrice","pOffer","JSON","stringify","editProduct","product","pEditImages","pId","_id","pImages"],"sources":["D:/gray_projects/sparsh/frontend/src/components/admin/products/FetchApi.js"],"sourcesContent":["\r\nimport axios from \"axios\";\r\n\r\nconst apiURL = \"http://localhost:8000\";\r\n\r\nexport const getAllProduct = async () => {\r\n  try {\r\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getGroupedProduct = async () => {\r\n  try {\r\n    let res = await axios.get(`${apiURL}/api/product/grouped-by-category`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPorductImage = async ({ pImage }) => {\r\n  let formData = new FormData();\r\n  for (const file of pImage) {\r\n    formData.append(\"pImage\", file);\r\n  }\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/add-image`, formData);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createProduct = async ({\r\n  pName,\r\n  pDescription,\r\n  pImage,\r\n  pColors,\r\n  pSizes,\r\n  pStatus,\r\n  pCategory,\r\n  pQuantity,\r\n  pPrice,\r\n  pOffer,\r\n}) => {\r\n  let formData = new FormData();\r\n\r\n  // Append images\r\n  for (const file of pImage) {\r\n    formData.append(\"pImage\", file);\r\n  }\r\n\r\n  // Append other fields\r\n  formData.append(\"pName\", pName);\r\n  formData.append(\"pDescription\", pDescription);\r\n  formData.append(\"pStatus\", pStatus);\r\n  formData.append(\"pCategory\", pCategory);\r\n  formData.append(\"pQuantity\", pQuantity);\r\n  formData.append(\"pPrice\", pPrice);\r\n  formData.append(\"pOffer\", pOffer);\r\n\r\n  // Append pColors and pSizes as JSON strings\r\n  formData.append(\"pColors\", JSON.stringify(pColors));\r\n  formData.append(\"pSizes\", JSON.stringify(pSizes));\r\n\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const editProduct = async (product) => {\r\n  let formData = new FormData();\r\n\r\n  // Append new images, if any\r\n  if (product.pEditImages) {\r\n    for (const file of product.pEditImages) {\r\n      formData.append(\"pEditImages\", file);\r\n    }\r\n  }\r\n\r\n  // Append other fields\r\n  formData.append(\"pId\", product.pId);\r\n  formData.append(\"pName\", product.pName);\r\n  formData.append(\"pDescription\", product.pDescription);\r\n  formData.append(\"pStatus\", product.pStatus);\r\n  formData.append(\"pCategory\", product.pCategory._id);\r\n  formData.append(\"pQuantity\", product.pQuantity);\r\n  formData.append(\"pPrice\", product.pPrice);\r\n  formData.append(\"pOffer\", product.pOffer);\r\n\r\n  // Append existing images and arrays as JSON strings\r\n  formData.append(\"pImages\", JSON.stringify(product.pImages));\r\n  formData.append(\"pColors\", JSON.stringify(product.pColors));\r\n  formData.append(\"pSizes\", JSON.stringify(product.pSizes));\r\n\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}