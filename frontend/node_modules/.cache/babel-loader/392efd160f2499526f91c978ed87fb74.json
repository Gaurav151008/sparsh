{"ast":null,"code":"import axios from \"axios\";\nconst apiURL = \"http://localhost:8000\";\nexport const getAllProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getGroupedProduct = async () => {\n  try {\n    let res = await axios.get(`${apiURL}/api/product/grouped-by-category`);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPorductImage = async ({\n  pImage\n}) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n};\nexport const createProduct = async ({\n  pName,\n  pDescription,\n  pImage,\n  pColors,\n  pSizes,\n  pStatus,\n  pCategory,\n  pQuantity,\n  pPrice,\n  pOffer\n}) => {\n  /* Most important part for uploading multiple image  */\n  let formData = new FormData();\n  for (const file of pImage) {\n    formData.append(\"pImage\", file);\n  }\n  /* Most important part for uploading multiple image  */\n  formData.append(\"pName\", pName);\n  formData.append(\"pDescription\", pDescription);\n  formData.append(\"pStatus\", pStatus);\n  formData.append(\"pCategory\", pCategory);\n  formData.append(\"pQuantity\", pQuantity);\n  formData.append(\"pPrice\", pPrice);\n  formData.append(\"pOffer\", pOffer);\n\n  // Append pColors and pSizes as JSON strings\n  formData.append(\"pColors\", JSON.stringify(pColors));\n  formData.append(\"pSizes\", JSON.stringify(pSizes));\n  try {\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const editProduct = async product => {\n  console.log(product);\n  /* Most important part for updating multiple image  */\n  let formData = new FormData();\n  if (product.pEditImages) {\n    for (const file of product.pEditImages) {\n      formData.append(\"pEditImages\", file);\n    }\n  }\n  /* Most important part for updating multiple image  */\n  formData.append(\"pId\", product.pId);\n  formData.append(\"pName\", product.pName);\n  formData.append(\"pDescription\", product.pDescription);\n  formData.append(\"pStatus\", product.pStatus);\n  formData.append(\"pCategory\", product.pCategory._id);\n  formData.append(\"pQuantity\", product.pQuantity);\n  formData.append(\"pPrice\", product.pPrice);\n  formData.append(\"pOffer\", product.pOffer);\n  formData.append(\"pImages\", product.pImages);\n  formData.append(\"pColors\", JSON.stringify(product.pColors));\n  formData.append(\"pSizes\", JSON.stringify(product.pSizes));\n  try {\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteProduct = async pId => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/delete-product`, {\n      pId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const productByCategory = async catId => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-category`, {\n      catId\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const productByPrice = async price => {\n  try {\n    let res = await axios.post(`${apiURL}/api/product/product-by-price`, {\n      price\n    });\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["axios","apiURL","getAllProduct","res","get","data","error","console","log","getGroupedProduct","createPorductImage","pImage","formData","FormData","file","append","createProduct","pName","pDescription","pColors","pSizes","pStatus","pCategory","pQuantity","pPrice","pOffer","JSON","stringify","post","editProduct","product","pEditImages","pId","_id","pImages","deleteProduct","productByCategory","catId","productByPrice","price"],"sources":["D:/gray_projects/sparsh/frontend/src/components/admin/products/FetchApi.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiURL = \"http://localhost:8000\";\r\n\r\n\r\nexport const getAllProduct = async () => {\r\n  try {\r\n    let res = await axios.get(`${apiURL}/api/product/all-product`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getGroupedProduct = async () => {\r\n  try {\r\n    let res = await axios.get(`${apiURL}/api/product/grouped-by-category`);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const createPorductImage = async ({ pImage }) => {\r\n  /* Most important part for uploading multiple image  */\r\n  let formData = new FormData();\r\n  for (const file of pImage) {\r\n    formData.append(\"pImage\", file);\r\n  }\r\n  /* Most important part for uploading multiple image  */\r\n};\r\n\r\nexport const createProduct = async ({\r\n  pName,\r\n  pDescription,\r\n  pImage,\r\n  pColors,\r\n  pSizes,\r\n  pStatus,\r\n  pCategory,\r\n  pQuantity,\r\n  pPrice,\r\n  pOffer,\r\n}) => {\r\n  /* Most important part for uploading multiple image  */\r\n  let formData = new FormData();\r\n  for (const file of pImage) {\r\n    formData.append(\"pImage\", file);\r\n  }\r\n  /* Most important part for uploading multiple image  */\r\n  formData.append(\"pName\", pName);\r\n  formData.append(\"pDescription\", pDescription);\r\n  formData.append(\"pStatus\", pStatus);\r\n  formData.append(\"pCategory\", pCategory);\r\n  formData.append(\"pQuantity\", pQuantity);\r\n  formData.append(\"pPrice\", pPrice);\r\n  formData.append(\"pOffer\", pOffer);\r\n\r\n  // Append pColors and pSizes as JSON strings\r\n  formData.append(\"pColors\", JSON.stringify(pColors));\r\n  formData.append(\"pSizes\", JSON.stringify(pSizes));\r\n\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/add-product`, formData);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const editProduct = async (product) => {\r\n  console.log(product);\r\n  /* Most important part for updating multiple image  */\r\n  let formData = new FormData();\r\n  if (product.pEditImages) {\r\n    for (const file of product.pEditImages) {\r\n      formData.append(\"pEditImages\", file);\r\n    }\r\n  }\r\n  /* Most important part for updating multiple image  */\r\n  formData.append(\"pId\", product.pId);\r\n  formData.append(\"pName\", product.pName);\r\n  formData.append(\"pDescription\", product.pDescription);\r\n  formData.append(\"pStatus\", product.pStatus);\r\n  formData.append(\"pCategory\", product.pCategory._id);\r\n  formData.append(\"pQuantity\", product.pQuantity);\r\n  formData.append(\"pPrice\", product.pPrice);\r\n  formData.append(\"pOffer\", product.pOffer);\r\n  formData.append(\"pImages\", product.pImages);\r\n\r\n  formData.append(\"pColors\", JSON.stringify(product.pColors));\r\n  formData.append(\"pSizes\", JSON.stringify(product.pSizes));\r\n  \r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/edit-product`, formData);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteProduct = async (pId) => {\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/delete-product`, { pId });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const productByCategory = async (catId) => {\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/product-by-category`, {\r\n      catId,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const productByPrice = async (price) => {\r\n  try {\r\n    let res = await axios.post(`${apiURL}/api/product/product-by-price`, {\r\n      price,\r\n    });\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAG,uBAAuB;AAGtC,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,IAAIC,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,MAAO,0BAAyB,CAAC;IAC9D,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EAC3C,IAAI;IACF,IAAIN,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAE,GAAEH,MAAO,kCAAiC,CAAC;IACtE,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAG,MAAAA,CAAO;EAAEC;AAAO,CAAC,KAAK;EACtD;EACA,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7B,KAAK,MAAMC,IAAI,IAAIH,MAAM,EAAE;IACzBC,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;EACjC;EACA;AACF,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAAA,CAAO;EAClCC,KAAK;EACLC,YAAY;EACZP,MAAM;EACNQ,OAAO;EACPC,MAAM;EACNC,OAAO;EACPC,SAAS;EACTC,SAAS;EACTC,MAAM;EACNC;AACF,CAAC,KAAK;EACJ;EACA,IAAIb,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7B,KAAK,MAAMC,IAAI,IAAIH,MAAM,EAAE;IACzBC,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAED,IAAI,CAAC;EACjC;EACA;EACAF,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAEE,KAAK,CAAC;EAC/BL,QAAQ,CAACG,MAAM,CAAC,cAAc,EAAEG,YAAY,CAAC;EAC7CN,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEM,OAAO,CAAC;EACnCT,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAEO,SAAS,CAAC;EACvCV,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAEQ,SAAS,CAAC;EACvCX,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAES,MAAM,CAAC;EACjCZ,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEU,MAAM,CAAC;;EAEjC;EACAb,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEW,IAAI,CAACC,SAAS,CAACR,OAAO,CAAC,CAAC;EACnDP,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEW,IAAI,CAACC,SAAS,CAACP,MAAM,CAAC,CAAC;EAEjD,IAAI;IACF,IAAIjB,GAAG,GAAG,MAAMH,KAAK,CAAC4B,IAAI,CAAE,GAAE3B,MAAO,0BAAyB,EAAEW,QAAQ,CAAC;IACzE,OAAOT,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMuB,WAAW,GAAG,MAAOC,OAAO,IAAK;EAC5CvB,OAAO,CAACC,GAAG,CAACsB,OAAO,CAAC;EACpB;EACA,IAAIlB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7B,IAAIiB,OAAO,CAACC,WAAW,EAAE;IACvB,KAAK,MAAMjB,IAAI,IAAIgB,OAAO,CAACC,WAAW,EAAE;MACtCnB,QAAQ,CAACG,MAAM,CAAC,aAAa,EAAED,IAAI,CAAC;IACtC;EACF;EACA;EACAF,QAAQ,CAACG,MAAM,CAAC,KAAK,EAAEe,OAAO,CAACE,GAAG,CAAC;EACnCpB,QAAQ,CAACG,MAAM,CAAC,OAAO,EAAEe,OAAO,CAACb,KAAK,CAAC;EACvCL,QAAQ,CAACG,MAAM,CAAC,cAAc,EAAEe,OAAO,CAACZ,YAAY,CAAC;EACrDN,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEe,OAAO,CAACT,OAAO,CAAC;EAC3CT,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAEe,OAAO,CAACR,SAAS,CAACW,GAAG,CAAC;EACnDrB,QAAQ,CAACG,MAAM,CAAC,WAAW,EAAEe,OAAO,CAACP,SAAS,CAAC;EAC/CX,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEe,OAAO,CAACN,MAAM,CAAC;EACzCZ,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEe,OAAO,CAACL,MAAM,CAAC;EACzCb,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEe,OAAO,CAACI,OAAO,CAAC;EAE3CtB,QAAQ,CAACG,MAAM,CAAC,SAAS,EAAEW,IAAI,CAACC,SAAS,CAACG,OAAO,CAACX,OAAO,CAAC,CAAC;EAC3DP,QAAQ,CAACG,MAAM,CAAC,QAAQ,EAAEW,IAAI,CAACC,SAAS,CAACG,OAAO,CAACV,MAAM,CAAC,CAAC;EAEzD,IAAI;IACF,IAAIjB,GAAG,GAAG,MAAMH,KAAK,CAAC4B,IAAI,CAAE,GAAE3B,MAAO,2BAA0B,EAAEW,QAAQ,CAAC;IAC1E,OAAOT,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAM6B,aAAa,GAAG,MAAOH,GAAG,IAAK;EAC1C,IAAI;IACF,IAAI7B,GAAG,GAAG,MAAMH,KAAK,CAAC4B,IAAI,CAAE,GAAE3B,MAAO,6BAA4B,EAAE;MAAE+B;IAAI,CAAC,CAAC;IAC3E,OAAO7B,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAM8B,iBAAiB,GAAG,MAAOC,KAAK,IAAK;EAChD,IAAI;IACF,IAAIlC,GAAG,GAAG,MAAMH,KAAK,CAAC4B,IAAI,CAAE,GAAE3B,MAAO,kCAAiC,EAAE;MACtEoC;IACF,CAAC,CAAC;IACF,OAAOlC,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMgC,cAAc,GAAG,MAAOC,KAAK,IAAK;EAC7C,IAAI;IACF,IAAIpC,GAAG,GAAG,MAAMH,KAAK,CAAC4B,IAAI,CAAE,GAAE3B,MAAO,+BAA8B,EAAE;MACnEsC;IACF,CAAC,CAAC;IACF,OAAOpC,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}